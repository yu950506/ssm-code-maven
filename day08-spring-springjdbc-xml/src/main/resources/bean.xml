<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="cn.yhs.learn"></context:component-scan>
    <context:property-placeholder location="jdbc.properties"></context:property-placeholder>

    <!--使用Spring内置的数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClass}"></property>
        <property name="url" value="${jdbc.jdbcUrl}"></property>
        <property name="username" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>

    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--配置dao层-->
    <bean id="accountDao" class="cn.yhs.learn.dao.impl.AccountDaoImpl">
        <property name="template" ref="jdbcTemplate"></property>
    </bean>
    <!--配置service层-->
    <bean id="accountService" class="cn.yhs.learn.service.impl.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"></property>
    </bean>

    <!-- ***************  配置事务开始 ******************** -->
    <!--1.配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--2.配置事务的通知引用事务管理器-->
    <tx:advice transaction-manager="transactionManager" id="txAdvice">
        <!--3.配置事务的属性-->
        <tx:attributes>
            <!--
                read-only:是否是只读事务，默认是false,不只读
                isolation:事务的隔离级别：默认值就是数据库的默认隔离级别
                propagation:指定事务的传播行为
                timeout:指定超时时间，默认值是-1,。永不超时
                no-rollback-for:用于指定一个异常，当产生改异常时，事务不回滚，产生其他异常，事务回滚，没有默认值，任何异常都回滚
                rollback-for:用于指定一个异常，当执行该异常时，事务回滚，产生其他异常，事务不会滚，没有默认值，没有任何回滚
            -->
            <tx:method name="*" read-only="false" propagation="REQUIRED"/>
            <tx:method name="find*" read-only="true" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>
    <!--4.配置AOP切入点表达式-->
    <aop:config>
        <aop:pointcut id="pt1" expression="execution(* cn.yhs.learn.service.*.*(..))"></aop:pointcut>
        <!--5.配置切入点表达式和事务通知的对应关系-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt1"></aop:advisor>
    </aop:config>
    <!--6.开启spring对事务的支持-->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
    <!-- ***************  配置事务结束 ******************** -->

</beans>